
for 语句
  作用:
    用来遍历可迭代对象的数据元素
    
可迭代对象是指能依次获取数据元组的对象
  可迭代对象包括:
    字符串 str
    列表 list
    元组tuple
    字典 dict
    集合 set
    ...
语法:
  for 变量列表 in 可迭代对象:
      语句块1
  else:
      语句块2
说明:
  1. 可迭代对象每次提供一个元素依次赋值给变量列表中的变量,赋值完毕
     后执行语句块1,重复执行此步骤,直到可迭代对象不能提供数据为止
  2. 可迭代对象迭代完所有的元素后,执行else子句部分的语句块2,然后
     退出循环
  3. else 子句部分可以省略不写(同while类似)
  4. 当在循环内部用break终止循环时,else子句部分的语句不会执行

示例见:
  for.py


for 语句的注意事项
  1. for 中 range的调用次序:
    # 请问此程序的打印结果是什么?为什么?
    i = 6
    for x in range(1, i):
        print('x=', x, 'i=', i)
        i -= 1
    结果: 循环5次,循环次数与i的变化没有关系 

  2. for语句内的变量可能不会被创建
    for x in range(4, 0):
        print(x)
    else:
        print("循环结束后, x=", x)   # 出错,此变量不存在
  

for 语句嵌套:
  与 while 一样,for语句是语句(复合语句),它可以嵌套到其它
  复合语句中
  示例:
    for x in "ABC":
        for y in "123":
            print(x + y)



练习:
  1. 输入一个整数,代表正方形的宽度,打印如下的正方型
  (注: 用for语句嵌套实现)
    如:
      请输入: 5
    打印:
      1 2 3 4 5
      1 2 3 4 5
      1 2 3 4 5
      1 2 3 4 5
      1 2 3 4 5
    如:
      请输入: 3
    打印:
      1 2 3
      1 2 3
      1 2 3

  2. 输入一个整数,代表正方形的宽度,打印如下的正方型
  (注: 用for语句嵌套实现)
    如:
      请输入: 5
    打印:
      1 2 3 4 5
      2 3 4 5 6
      3 4 5 6 7
      4 5 6 7 8
      5 6 7 8 9
    如:
      请输入: 3
    打印:
      1 2 3
      2 3 4
      3 4 5


练习:
  1. 任意输入一段字符串,写程序做如下两件事:
    1) 计算出空格的个数,并打印个数
        (要求用for语句,不允许使用S.count方法)
    2) 计算出字符串中全部英文字符的个数
       (注:英文字符的编码值为0~127,可用ord(x) 函数进行判断)

  2. 完成上题后思考,上述功能能否用while语句实现

练习:
  输入一个字符串,从尾向头输出这个字符串的字符
    如:
      请输入: hello
    打印如下:
      o
      l
      l
      e
      h

  可以用 while语句 或 for语句 实现  