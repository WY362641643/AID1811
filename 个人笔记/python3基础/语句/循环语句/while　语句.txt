

while 语句:
  作用:
    根据一定条件,重复的执行一条语句或多条语句
  语法:
    while 真值表达式:
        语句块1(此部分的语句可能会重复执行)     
    else:
        语句块2
  说明:
    1. 先执行真值表达式,测试布尔值为True或False
    2. 如果真值表达式测试值为True,则执行语句块1,然后再返回到
       第1步,重复进行测试
    3. 如果真值表达式测试值为False,则执行语句块2,然后结果此
       while语句的执行,如果没有 else子句,则直接结束此while
       语句的执行
    注: else 子句部分可以省略(同if语句类似)
  示例见:
    while1.py
    while2.py


while 语句注意事项:
  1. 要控制循环的真值表达式来防止死循环
  2. 通常用真值表达式内的循环变量来控制循环条件
  3. 通常在循环语句块内要改变循环变量来控制循环条件和变量的走向


while语句嵌套
   while 语句本身是语句,和其它语句一样,可以嵌入到任何的复合
   语句中

  示意:
    while 真值表达式1:
        ....
        while 真值表达式2:
            ...
        else:
            ...
        ...
    else:
        ...
  示例:
    打印 1 ~ 20 的整数,打印在一行
      1 2 3 4 5 .... 20
    打印十行


死循环 death loop
  死循环是指循环条件一直成立的循环
  死循环通常用break语句来终止循环
  死循环的else子句永远不会执行
  
  示例:
    i = 1
    while True:
        print(i)
        if i == 10:
            break
        i += 1




练习:
  让用户任意输入一些整数,当输入负数时结束输入:
  当输入完成后,打印用户输入的所有整数的和
  如:
    请输入: 1
    请输入: 2
    请输入: 3
    请输入: 4
    请输入: -1
  打印如下:
    您输入的这些数的和是: 10

1. 打印 1 ~ 20 的整数, 打印在一行内显示,每个整数之间用
  一个空格分隔
    如:
     1 2 3 4 5 6 7 8 9 10 11 ...... 20

2. 打印 1 ~ 20 的整数, 每五个数字打印一行,打印四行
    如:
      1 2 3 4 5
      6 7 8 9 10
      ...
    提示:
      可以将 if 语句嵌入到while语句中

 3. 用 while语句打印 20 ~ 1之间的数


 4. 写一个程序
   输入一个开始的整数用变量begin绑定
   输入一个结束的整数用变量end绑定
   打印从 begin 到 end(不包含end) 之间的每个整数,打印在
   一行内
   如:
     请输入开始值: 8
     请输入结束值: 20
   打印:
      8 9 10 11 12 13 14 .... 19

  附加思考:
    如何实现每5个打印在一行内,打印多行?


5. 写一个程序, 输入一个整数n,打印一个宽度和高度都为n个字符的
  长方形.
    如:
      请输入: 4
    打印如下:
      ####
      #  #
      #  #
      ####
    如: 
      请输入: 6
    打印如下:
      ######
      #    #
      #    #
      #    #
      #    #
      ######

练习:
  1. 输入一个数,打印指定宽度的正方形
    如:
      请输入正方形宽度: 5
    打印如下:
      1 2 3 4 5
      1 2 3 4 5
      1 2 3 4 5
      1 2 3 4 5
      1 2 3 4 5
    如: 
      请输入正方形宽度: 3
    打印如下:
      1 2 3
      1 2 3
      1 2 3    

练习:
  1. 写一个程序来计算:
     1 + 2 + 3 + 4 + ...... + 99 + 100 的和
    答案: 5050
  