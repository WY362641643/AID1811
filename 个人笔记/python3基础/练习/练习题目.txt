
1. 北京出租车计价器
    收费标准:
      1. 3公里以内收费 13元
      2. 基本单价 2.3 元/公里(超过3公里以外)
      3. 空驶费: 超过15公里后,每公里加收单价的50%空驶费
         (即3.45元/公里)
    要求: 输入公里数,打印出费用金额(以元为单位精确到分)


2. 输入三个任意的数:
    1) 打印出最大数是多少?
    2) 打印出最小数是多少?
    3) 打印出三个数的平均值是多少?


3. BMI指数(Body Mass Index) 又称身体质量指数
    BMI计算公式:  BMI = 体重(公斤) / 身高的平方(米)
    如:  一个69公斤的人,身高是173厘米 则BMI如下:
       BMI = 69 / 1.73 ** 2    得23.05
    标准表:
      BMI < 18.5       体重过轻
      18.5 <= BMI < 24 正常范围
      BMI >= 24        体重过重
    输入身高和体重,打印出BMI值,并打印体重状况


4. 写一个程序,输入一个字符串,把字符串的第一个字符和最后一个
    字符去掉后,打印出处理后的字符串


5. 输入任意一个字符串,判断这个字符串是否是回文
    回文示例:
        上海自来水来自海上
        ABCCBA
    回文是指中心对称的文字


6. 用字符串 * 运算符 打印三角形
    要求输入一个数, 此整数代表此三角形离左侧的字符个数
    如:
      请输入左侧的空格数: 3
        *
       ***
      *****
     *******


7. 输入一个字符串,把输入的字符串中的空格全部去掉
    打印出处理之后的字符串的内容


8. 输入三行文字,让这三行文字在一个方框内居中显示
    如(请不要输入中文):
      请输入第1行: hello!
      请输入第2行: I'm studing python!
      请输入第3行: I like python!
    打印如下:
      +---------------------+
      |       hello!        |
      | I'm studing python! |
      |   I like python!    |
      +---------------------+

9. 写程序求下列算式的值:
     1/1 - 1/3 + 1/5 - 1/7 + 1/9 -.... (+-)1/(2*n-1)
     的和
    求:
      1) 当n等于10000时,此算式的和并打印
      2) 将n等于10000时算式的和乘以4,打印其结果 (3.14)
10. 用while语句打印三角形, 输入一个三角形的宽度和高度,打印
     相应的三角形:
      如:
        请输入三角形的宽度: 3
      1) 打印如下:
        *
        **
        ***
      2) 打印如下:
          *
         **
        ***
      3) 打印如下:
        ***
         **
          *
      4) 打印如下:
        ***
        **
        *

    
11. 用程序while语句生成如下字符串,并打印结果
    1) 'ABCDE........XYZ'
    2) 'AaBbCcDdEe......XxYyZz'
   函数:
      ord(x)  / chr(x)


12. 写程序打印九九乘法表
    1x1=1
    1x2=2 2x2=4
    1x3=3 2x3=6 3x3=9
    ....
    1x9=9 ..........  9x9=81

13. 写一个程序,任意输入一个整数,判断这个数是否为素数prime
    素数(也叫质数),是只能被1和自身整数的正整数
    如:  2 3 5 7 11 13 17 19 ...
    提示:
      用排除法: 当判断x是否为素数时,只要让x分别除以
       2, 3, 4, 5, 6 ... x-1,只要有一次被整除,则x不是
       素数,否则x是素数
14. 输入一个整数,此整数代表树干的高度,打印一棵如下形状的圣
    诞树
    如:
      输入: 2
    打印:
     *
    ***
     *
     *
    如:
      输入: 3
    打印:
      *
     ***
    *****
      *
      *
      *
15. 算出 100 ~ 999 范围内的水仙花数(Narcissistic Number)
    水仙花数是指百位的3次方 + 十位的3次方 + 个位的3次方 等于原
    数的整数
    如:
      153 = 1**3 + 5**3 + 3**3
    答案:
      153, 370, ....


16. 输入一个开始的整数 用begin绑定
    输入一个结束的整数 用end绑定
    将从begin开始,到end结束(不包含end)的偶数存于列表中,
    并打印此列表
    (建议用列表推导式实现)

17. 已知有字符串:
     s = '100,200,300,500,800'
     将其转化为列表,列表的内部都为数字:
     L = [100, 200, 300, 500, 800]


18. 已知有一个列表中存有很多数,还有重复的,如:
     L = [1, 3, 2, 1, 6, 4, 2, ...., 98, 82]
     1) 将列表中出现数字存入一个列表L2中
        要求: 重复出现多次的数字只能在L2中保留一份(去重)
     2) 将L列表中出现两次的数字存于另一个列表L3中,在L3中
        只保留一份


19. 写程序,生成前40个斐波那契数(Fibonacci)
    1  1  2  3  5  8  13  ....
    要求将这些数的存于一个列表中,最后打印这些数


20.  有一只小猴子,摘了很多桃.
     第一天吃了全部桃子的一半,感觉不饱又吃了一个
     第二天吃了剩下的一半,感觉不饱又吃了一个
     ... 以此类推
     到第十天,发现只剩一个了
    请问一天摘了多少桃子?

21. 写一个程序,实现一个带有菜单界面的字典程序
     菜单如下:
        1) 添加单词
        2) 删除单词
        3) 查找单词
        q) 退出
    示意见:

22. 项目(学生信息管理)
    输入任意个学生的信息,形成字典后存入列表中
       学生信息有: 姓名,年龄,成绩
    如:
      请输入姓名: tarena
      请输入年龄: 15
      请输入成绩: 99
      请输入姓名: name2
      请输入年龄: 20
      请输入成绩: 80
      请输入姓名: <回车> 结束输入
    形成内部存储格式如下:
    infos = [{'name': 'tarena', 'age':15, 'score':99},
             {'name': 'name2', 'age':20, 'score':80}]
    
    第二步以表格方式打印上述列表的内容:
    +---------------+----------+----------+
    |    姓名        |    年龄  |    成绩   |
    +---------------+----------+----------+
    |    tarena     |    15    |    99    |
    |     name2     |    20    |    80    |
    +---------------+----------+----------+



23. 写一个函数 get_chinese_char_count ,此函数实现的功能是
    给定一个字符串,返回这个字符串中中文字符的个数
      def get_chinese_char_count(s):
          ...  # 此处自己实现

      s = input('请输入中英文字混合的字符串:')
      print("您输入的中文字符的个数是:",
            get_chinese_char_count(s))
    注: 中文字符的编码范围是: 0x4E00 ~ 0x9FA5(包含)

24. 定义两个函数:
     sum3(a, b, c)   用于返回三个数的和
     pow3(x)         用于返回x的三次方
    用以下函数计算:
       1)  计算1的立方 + 2的立方 + 3的立方的和
       2)  计算1+2+3的和的立方
       即:1**3+2**3+3**3 和 (1+2+3) ** 3

25. 编写函数fun ,其功能是计算并返回下列多项式的值
    Sn = 1 + 1/2 + 1/3 + 1/4 + .... + 1/n
      def fun(n):
          ...
      print(fun(2))   # 1.5
      print(fun(3))   # 1.8333333333333
      print(fun(10))  # ????
    
26. 写一个函数 isprime(x) 判断x是否是素数,如果为素数则返回
    True, 否则返回False

27. 写一个函数 prime_m2n(m, n) 返回从m开始,到n结束范围内
    的素数(不包含n), 返回这些素数的列表,并打印
    如:
      L = prime_m2n(10, 20)
      print(L)  # [11, 13, 17, 19]

28. 写一个函数primes(n), 返回指定范围内n(不包含n)的全部素
     数的列表,并打印这些素数的列表
      L = primes(10)
      print(L)  # [2, 3, 5, 7]
      1) 打印100 以内的全部素数
      2) 打印 100 ~ 200之间全部素数的和

29. 看懂下面的程序在做什么?
    def fx(f, x, y):
        print(f(x, y))
    fx((lambda a, b: a + b), 100, 200)
    fx((lambda a, b: a ** b), 3, 4)
    # 程序直到此处时有几个全局变量?
30. 写一个函数 mysum(x) 来计算:
     1 + 2 + 3 + 4 + .... + x 的和,并返回
     (要求: 不允许调用sum函数)
     如:
        print(mysum(100))  # 5050
31. 写一个函数myfac(n) 来计算n!(n的阶乘)
     n! = 1*2*3*4*...*n 
     如:
        print(myfac(5))  # 120
32. 写一个函数计算 1 + 2**2 + 3**3 + ... + n**n的和
    (注: n给个小点的数)

33. 实现有界面的学生信息管理程序
    选择菜单如下:
      +-----------------------------+
      | 1) 添加学生信息               |
      | 2) 显示学生信息               |
      | 3) 删除学生信息               |
      | 4) 修改学生成绩               |
      | q) 退出                      |
      +-----------------------------+
      请选择: 1
    学生信息和存储方法与原程序相同: 用列表里包含来存信息
    要求: 每个功能写一个函数与之相对应


34. 改写之前的学生信息管理程序,将程序 改为两个函数:
      def input_student():
          ....    # 此函数用于获取学生的信息,形成包含有字典的列表
          然后返回此列表
      def output_student(L):
          ....   # 此函数以列格的形式打印学生信息的列表

      测试(实现与之前相同的功能):
      infos = input_student()
      print(infos)
      output_student(infos)


  1. 已知有列表：
    L = [[3, 5, 8], 10, [[13, 14], 15, 18], 20]
    1) 写一个函数 print_list(lst) 打印出所有的数字
       如:
         print_list(L)  # 打印 3 5 8 10 13 14
    2) 写一个函数 sum_list(lst) 返回这个列表中所有数字的和
       如:
         print(sum_list(L))  # 106
    注:
      type(x) 函数可以返回一个对象的类型
      如: type(20) is int  # True
          type([1, 2, 3]) is list  # True

  2.  写程序求出1~20的阶乘的和
     即:  1!+2!+3!+....+20!

  3. 改写之前的学生信息管理程序,添加如下四个功能:
      | 5)  按学生成绩高~低显示学生信息 |
      | 6)  按学生成绩低~高显示学生信息 |
      | 7)  按学生年龄高~低显示学生信息 |s
      | 8)  按学生年龄低~高显示学生信息 |

1. 写一个程序,以电子时钟的格式打印时间:
    格式为:
      HH:MM:SS
    如:
      17:51:20
    时间自动变化

  2. 编写一个闹钟程序,启动时设置定时时间,到时间后打印一句
    '时间到!!!' 然后退出程序

  3. 编写函数fun 基功能是计算下列多项式的和
    Sn = 1 + 1/1! + 1/2! + 1/3! + .... + 1/n!
    (建议用数学模块中的factorial)
      求当n得20时 Sn的值
    即:
      print(fun(20))  # 2.718281828...


练习:
  写一个程序，输入你的生日（年,月,日）
    1) 算出你已经出生了多少天
    2) 算出您出生那天是星期几?



练习:
  1. 写一个程序,以电子时钟的格式打印时间:
    格式为:
      HH:MM:SS
    如:
      17:51:20
    时间自动变化

  2. 编写一个闹钟程序,启动时设置定时时间,到时间后打印一句
    '时间到!!!' 然后退出程序

  3. 编写函数fun 基功能是计算下列多项式的和
    Sn = 1 + 1/1! + 1/2! + 1/3! + .... + 1/n!
    (建议用数学模块中的factorial)
      求当n得20时 Sn的值
    即:
      print(fun(20))  # 2.718281828...



练习:
  1. 写一个程序, 模拟斗地主发牌,牌共54张
    种类有: 黑桃('\u2660'), 梅花('\u2663'),
           红桃('\u2665'), 方块('\u2666)
    数字有: A2-10JQK
    大王和小王
    输入回车, 打印第1个人的17张牌
    输入回车, 打印第2个人的17张牌
    输入回车, 打印第3个人的17张牌
    输入回车, 打印3张底牌

  2. 将学生信息管理程序拆分为模块
    要求:
      1. 主事件循环的main函数放在 main.py 中
      2. 显示菜单的函数show_menu 放在 menu.py 中
      3. 与学生信息操作相关的函数放在student_info.py 中



练习:
  1. 有一个集合:
      s = {'唐僧', '悟空', '八戒', '沙僧'}
    用for语句遍历所有元素如下:
      for x in s:
          print(x)
      else:
          print("遍历结束")
    请将上面的for语句改写为while语句的迭代器实现

  2. 一个小球从100米高空落下,每次落地后反弹高度为原高度的一半
    再落下,
    1) 写程序算出皮球在第10次落地后反弹多高
    2) 打印出第10次反弹后小球经历的总路程

  3. 修改原学生信息管理程序,加入异常处理语句,让程序在任何情况
    下都能按逻辑正常执行,不至于崩溃
       如:输入年龄时输入非数字字符会崩溃)

练习:
  1. 实现一个python2下的xrange([start], stop, [step])
    生成器函数,此生成函数按range规则来生成一系列整数
    要求:
      myxrange功能与range功能完全相同
      不允许调用range函数和列表
  用自己写的myxrange结果生成器表达式求 1~10以内所有奇数的
    平方和
  如:
    def myxrange(start, stop=None, step=None):
         ....以下自己实现
    求:1 ** 2 + 3 ** 2 + 5 **2 + ...  9 ** 2

  2. 写一个程序,从键盘输入一段字符串,用变量s绑定
     1) 将此字符串转为字节串用变量b绑定,并打印出此字节串b
     2) 打印字符串s的长度和字节串b的长度
     3) 将字节串b再转换为字符串用变量s2 绑定,然后判断
       s2 和 s是否相同

  3. 分解质因数,输入一个正整数,分解质因数
     如
       输入: 90
     打印
       90 = 2*3*3*5
    注: 质因数是指最小能被原数整数的素数(不包括1)

  4. 预习文件操作, 面向对象



练习:
  1. 写程序,实现文件的复制,(注:只复制文件,不复制文件夹)
    要求:
      1) 要考虑文件关闭的问题
      2) 要考虑超大文件无法一下加载到内存的问题
      3) 要能复制二进制文件(非文本文件)

  2. 为原学生信息管理程序添加两个功能:
    | 9) 从文件中读取数据(si.txt)    |
    | 10) 保存信息到文件(si.txt)    |
   说明:
     9) 相当于打开文件功能 
     10) 相当于保存功能      

练习:
  1. 定义一个 '人' 类
    class Human:
        def set_info(self, name, age, address='不详'):
            '此方法为self对象添加姓名,年龄,家庭住址属性'
            ... # 此处自己实现
        
        def show_info(self):
            '此方法显示某个人(实例)的信息'
            ... # 此处自己实现
    h1 = Human()
    h1.set_info('小张', 20, '北京市朝阳区')
    h2 = Human()
    h2.set_info('小李', 18)
    h1.show_info()  # 小张 今年 20 岁,家庭住址: 北京市朝阳区
    h1.show_info()  # 小李 今年 18 岁,家庭住址: 不详

练习:
  写一个学生类 Student类, 此类用于描述学生信息,学生信息有
    姓名,年龄,成绩(默认为0)
  1. 为该类添加初始化方法,实现在创建对象时自己自动设置,
     姓名,年龄,成绩
  2. 添加 set_score方法能力对象修改成绩信息
  3. 添加show_info方法打印学生对象的信息
  如 :
    class Student:
        def __init__(...):
            ...
        def set_score(...):
            ...
        def show_info(...):
            ...
    L = []
    L.append(Student('小张', 20, 100))
    L.append(Student('小李', 18, 98))
    L.append(Student('小王', 19))
    L[2].set_score(80)
    for s in L:
        s.show_info()  # 显示每个对象的信息


练习:
  有两个人:
    1. 姓名: 张三, 年龄: 35
    2. 姓名: 李四, 年龄: 15
  行为:
    1. 教别人学东西 teach
    2. 工作赚钱 work
    3. 借钱 borrow(从xxx处错钱)
    4. 显示自己的信息 show_info
  事情:
    张三 教 四李 学 python
    李四 教 张三 学 王者荣耀
    张三 上班赚钱 1000 元
    李四 向 张三 错钱 200 元
    35 岁的 张三 有钱 800 元,它学会的技能是: 王者荣耀
    15 岁的 李四 有钱 200 元,它学会的技能是: python
  如:
    class Human:
        def __init__(self, ....):
            ...
        def teach(self. ...)

练习:
   1. 修改原学生信息管理程序, 原学生数据用字典保存,
      现改为Student类型的对象来保存
    要求 :
      定义一个Student 类,此类写在:
         student.py 模块中
        

练习:
  用类来描述一个学生的信息(可以修改之前写的Student类)
  如:
    class Student:
        ... # 此处自己实现
    
    将这些学生对象存于列表中, 写函数或方法实现添加学生和
    删除学生信息等操作
      1. 打印学生的个数
      2. 打印学生的平均成绩


练习:
  实现一个与系统内建的range类相同功能的类
    class MyRange:
        def __init__(self, ...):
            ...
        def __iter__(self):
            ...
  测试调用如下:
    L = list(range(5))
    print(L)  # [0, 1, 2, 3, 4]
    print(sum(MyRange(1, 101)))  # 5050
    L2 = [x**2 for x in MyRange(1, 10, 3)]
    print(L2)  # [1, 4, 7]
    for x in MyRange(10, 0, -3):
        print(x)  # 打印: 10, 7, 4, 1



练习:
  修改原学生管理系统的Student类, 将此类创建的对象的实例属性
  name, age, score 改为私有属性隐藏起来,让此类以外的代码无法
  访问对象的属性


练习:
  实现有序集合类 OrderSet() 能实现两个集合的交集 &, 并集 |
  补集 -, 对称补集 ^, ==, != , in , not in 等操作
    要求: 集合内部用list存储数据 
  
  如:
    s1 = OrderSet([1, 2, 3, 4])
    s2 = OrderSet([3, 4, 5])
    print(s1 & s2)  # OrderSet([3, 4])
    print(s1 | s2)  # OrderSet([1, 2, 3, 4, 5])
    print(s1 ^ s2)  # OrderSet([1, 2, 5])
    if OrderSet([1,2,3]) != s1:
        print("不相等")
    else:
        print("相等")
    if s2 == OrderSet([3, 4, 5]):
        print('s2 == OrderSet([3, 4, 5])')
    if 2 in s1:
        print('2 in s1')
  答案见:
    orderset.py
    




