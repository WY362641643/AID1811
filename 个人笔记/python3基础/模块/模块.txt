
模块 Module
  什么是模块
    模块是一个包含有一系列的数据,函数,类等组成的程序组
    模块是一个文件,模块文件名通常以.py结果

  作用:
    1. 让一些相关的数据,函数,类等有逻辑的组织在一起,使逻辑结构
       更加清晰
    2. 模块中的数据,函数和类可提供给其它模块或程序使用

  模块的分类:
    1. 内置模块,在解析器的内部可以直接使用
    2. 标准库模块,安装python时已安装且可以直接使用
    3. 第三方模块(通常为开源), 需要自己安装
       通常 用pip3 命令来安装,如:
         $ pip3 install tensorflow
    4. 用户自己编写的模块(可以作为其它人的第三方模块)

模块化编程的优点:
  1. 有利于多人合作开发
  2. 使代码更易于维护
  3. 提高代码的复用率(模块可以同时被很多模块同时导入)
  4. 模块化编程有助于解决函数名和变量名冲突(重名),模块内的
     变量的作用域在模块内为全局


模块的导入 import
import 语句
  语法:
    import 模块名1 [as 模块新名1][, 模块名2[as 模块新名2]]
  作用:
    将某模块整体导入到当前模块作用域内
  示例:
    import math
    print(math.factorial(5))
    import time, sys
  用法:
    模块名.属性名

查看模块属性的函数:
  dir(obj) 函数, 返回模块内所有属性的列表
  help(obj) 函数,可以查看模块相关的文档字符串


模块的加载过程
  在模块导入时,模块的所有语句都会执行
  如果一个模块已经导入,则再次导入时不会重新执行模块内的语句

模块的重新加载
  示例:
    import mymod
    import imp
    imp.reload(mymod)  # 重新导入mymod模块

模块被导入和执行的过程
  1. 先搜索相关的路径找模块(.py文件)
  2. 判断是否有此模块对应的.pyc文件,如是有.pyc文件且.pyc文件
     比.py 文件新,则直接加载.pyc文件
  3. 否则先用.py文件生成.pyc文件,然后再加载.pyc文件

pyc 模块的编译文件(python compile)
            编译             解释执行
  mymod.py -----> mymod.pyc -------> python3




模块的属性
  1. 模块的文档字符串
    模块内第一次没有赋值给任何变量的字符串是模块的文档字符串 
    模块的文档字符串绑定在模块的__doc__属性上
  
  2. 模块的__file__属性
     用于绑定模块的路径
     如:
       import mymod
       print(mymod.__file__) #/home/tarena/../mymod.py

  3. 模块的 __name__属性
    __name__属性用来记录模块的自身的名字
    作用:
      1. 记录模块名
      2. 用来判断当前模块是否是主模块
    说明:
      1. 当此模块作为主模块(也就是它是第一个运行的模块)运行时,
         __name__绑定 '__main__'
      2. 当此模块不是主模块,则是被其它模块导入时,此属性绑定
        模块名, 即
           xxx.py 的模块名为xxx
    示例见:
      mymod.py


模块内的__all__列表
  模块中的__all__列表是一个用来存放可导出属性的字符串列表

  作用:
    当用from xxx import * 导入时,只导入__all__列表内的属性
  示例见:
    mymod2.py
  注: __all__列表只对from import *语句有效,对其它导入语句
     无效
  
  
模块的隐藏属性
  模块中以下划线(_) 开头的属性,在 from xxx import *语句
  导入时将不被导入,通常称这些属性为隐藏属性

  示例见:
    mymod3.py


随机模块 random
  作用:
    用于模拟或生成随机输出的模块
  文档参见:
    python_base_docs_html/随机模块random.html

练习:
  1. 猜数字游戏:
    随机生成一个0~100之间的一个整数,用变量x绑定
    让用户输入一个数用变量y绑定,然后输出猜数字的结果
      1) 如果y 等于生成的数x,则提示用户"恭喜您猜对了", 并退出
       程序
      2) 如果 y 大于 x,则提示: 您猜的数字大了,然后继续猜
      3) 如果 y 小于 x,则提示: 您猜小了, 然后继续猜

    直到猜对为止,最后显示用户猜数字的次数

