
模块化编程的优点:
  1. 有利于多人合作开发
  2. 使代码更易于维护
  3. 提高代码的复用率(模块可以同时被很多模块同时导入)
  4. 模块化编程有助于解决函数名和变量名冲突(重名),模块内的
     变量的作用域在模块内为全局
    
模块的加载过程
  在模块导入时,模块的所有语句都会执行
  如果一个模块已经导入,则再次导入时不会重新执行模块内的语句

模块的重新加载
  示例:
    import mymod
    import imp
    imp.reload(mymod)  # 重新导入mymod模块

模块被导入和执行的过程
  1. 先搜索相关的路径找模块(.py文件)
  2. 判断是否有此模块对应的.pyc文件,如是有.pyc文件且.pyc文件
     比.py 文件新,则直接加载.pyc文件
  3. 否则先用.py文件生成.pyc文件,然后再加载.pyc文件

pyc 模块的编译文件(python compile)
            编译             解释执行
  mymod.py -----> mymod.pyc -------> python3