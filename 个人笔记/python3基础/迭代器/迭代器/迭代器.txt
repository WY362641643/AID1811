

迭代器 Iterator
  什么是迭代器
    迭代器是访问可迭代对象的工具
    迭代器是指用iter(obj) 函数返回的对象(实例)
    迭代器可以用next(it) 函数获取可迭代对象的数据

迭代器相关的函数
  iter(iterable)  从可迭代对象中返回一个迭代器,iterable
        必须是一个能提供迭代器的对象
  next(iterator)  从迭代器iterator 中获取下一个记录,如果
        无法获取下一条记录,则会触发StopIteration异常通知

  说明:
    迭代器只能往前取值,不会后退
    用iter函数可以返回一个可迭代对象的迭代器
  示例:
    L = [1, 3, 5, 7]
    it = iter(L)  # 从对象L中获取迭代器,然后用it变量绑定
    print(next(it))  # 1
    print(next(it))  # 3
    print(next(it))  # 5
    print(next(it))  # 7
    print(next(it))  # StopIteration 异常

    # 用迭代器访问range函数返回来的对象
    it = iter(range(1, 10, 3))
    print(next(it))  # 1
    print(next(it))  # 4
    print(next(it))  # 7
    print(next(it))  # StopIteration
  
  用迭代器函数iter和next 访问可迭代对象的示例见:
    iterator.py


迭代工具函数:
zip(可迭代对象1, 可迭代对象2, .....)
enumerate(可迭代对象, start=0)  # (索引, 值)

