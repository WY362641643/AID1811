元组 tuple
  1. 元组是不可以改变的序列,同list一样,元组是可以存放任意类型
     数据的容器
  2. 可以认为,元组是不可变的列表

元组的表示方法:
  用小括号() 括起来,单个元素括起来后加逗号(,) 号区分元组还是
    单个元素
创建空元组:
    ()   # 创建一个空元组
创建非空元组:
    t = 100,
    t = (200,)
    t = (1, 2, 3)
    t = 100, 200, 300
注:  type(x)函数可以返回x的类型

元组的错误示例:
  t = (20)  t 绑定20这个整数,不是元组
  x, y, z = 100, 200, 300  # 序列赋值,不是元组
  x, y, z = (100,200, 300)  
  x, y, z = [100,200, 300]
  x, y, z = "ABC"
  x, y  = y, x  # 序列赋值实现交换


元组的构造函数:
  tuple()  生成一个空的元组,等同于()
  tuple(iterable)  用可迭代对象生成一个元组

  示例:
    t = tuple()
    t = tuple("ABC")
    t = tuple(range(1, 10, 3))
    t = tuple([2, 3, 5, 7])

元组是可迭代对象
    t = tuple("ABC")
    for x in t:
        print(x)
    L = [x for x in t]

元组的运算
  算术运算:
    +    +=    *     *= 
    用法等同于字符串的算术运算
    如:
      t = (1,2,3) + (4, 5, 6)
      t += (7, 8, 9)  # 注:此处t绑定的对象的ID会变化
      t = (1,2,3) * 2
      t *= 3
  元组的 in / not in 运算符
    判断一个值是否存在于元组中,如果存在返回True, 否则返回False
    (与列表的in / not in 功能相同)  
  索引 index
    用法等同于列表的索引
    注: 元组不支持索引赋值
  切片:
    用法与列表的切片用法相同
    元组的切片返回一个新的元组
    元组不能切片赋值

元组的方法:
  T.index(v[,begin[,end]])  返回对应元素的索引下标,begin
            为开始索引,end为结束索引,当v 不存在时会触发
            ValueError类型的错误!
  T.count(x)   返回元组中对应的元素个数

练习:
  生成一个0~9的整数的平方的元组,元组如下:
    (1, 4, 9, 16, .... 81)

三种序列 小结
  str
  tuple
  list
  都是容器:
    不可变:  str, tuple
    可变:   list
  有先后顺序关系

能用于序列的函数总结:
  len(x)  max(x)  min(x)  sum(x)  any(x)  all(x)
  构造函数:
    str(x)  tuple(x)   list(x)

    reversed(x), sorted(x, reverse=False)
