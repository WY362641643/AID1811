
装饰器 decorators(专业提高篇)
什么是装饰器
  装饰器是一个函数,主要作用是用来包装另一个函数或类(后面才讲)

  作用:
    在不修改被装饰函数的源代码,不改变被装饰函数的调用方式的情
    况下添加或改变原函数的功能

  语法:
    def 装饰器函数名(fn):
        语句块
        return 函数对象
    
    @装饰器函数名<换行＞
    def 被装饰函数名(形参列表):
        语句块 

 示例及示意见:
    mydeco1.py
    mydeco2.py
    mydeco3.py
    mydeco4.py(语法实现)

带参数的装饰器的应用实例见:
    mydeco5.py


函数定义的完整语法总结:
  def 语句语法:
    [@装饰器1]
    [@装饰器2]
    [...]
    def 函数名([位置形参], [*元组形参], [命名关键字形参], 
              [**字典形参]):
        '''文档字符串'''
        语句块
   注: []表示其中的内容可省略


面试题:
    L = [1, 2, 3]
    def f(n=0, lst=[]):
        lst.append(n)
        print(lst)

    f(4, L)  # [1, 2, 3, 4]
    f(5, L)  # [1, 2, 3, 4, 5]
    f(100)   # [100]
    f(200)   # [100, 200]
    请问，每个函数打印结果是什么，为什么？

