

sorted 函数:
  作用:
    将原可迭代对象的数据进行排序,生成排序后的列表
  格式:
    sorted(iterable, key=None, reverse=False)
  参数:
    iterable 可迭代对象 
    key 函数,用来提供一个排序的依据值,默认用原值进行比较
        key函数传入的是要比较的数据对象,返回值为能进行比较的值
    reverse 标志用来设置是否降序排序
  返回值:
    排序后的列表
示例:
L = [5, -2, -4, 0, 3, 1]
L2 = sorted(L)  # L2 = [-4, -2, 0, 1, 3, 5]
L3 = sorted(L, reverse=True)  # [5, 3, 1, 0, -2, -4]
L4 = sorted(L, key=abs)       # [0, 1, -2, 3, -4, 5]


key 函数的格式:
  def xxx(a[需要比较的数据]):
      return a的依据

示例2:
  names = ['Tom', 'Jerry', 'Spike', 'Tyke']
  L1= sorted(names)  # ['Jerry', 'Spike', 'Tom', 'Tyke']
  L2 = sorted(names, key=len)

练习:
  以下列表的中的数据进行排序
    L = [(1, 5), (3, 9), (4, 1), (3, 6), (5, 3)]
  1. 将列表内的五个元组按,第二个数据的从小到大的顺序进行排序
    结果如下:
    L = [(4, 1), (5, 3), (1, 5), (3, 6), (3, 9) ]

  2. 将列表内的五个元组按第二个数的从大到小顺序进行排序,打印
     排序之后的结果

  3. 假设元组中的数据是数学直角坐标系的坐标,则按他们距离原点
     的距离进行排序
     (提示: 距离等同于 distance = sqrt(x**2 + y**2))

