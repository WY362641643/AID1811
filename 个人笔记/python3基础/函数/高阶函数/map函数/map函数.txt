

map函数 
  格式:
    map(func, iterable1, iterable2, ...)
  作用:
    用iterable1, iterable2中取出的数据用func处理后返回
    处理后的结果
  参数:
    func 数据处理函数
    iterable1, iterable2  可以迭代对象
  返回值:
    可迭代对象
  示例:
    def power2(x):
        return x ** 2
    map(power2, range(1, 10))  #[1,4,9,16,25...81]
    
    for x in map(power2, range(1, 10)):
        print(x)   # 1 4 9 16 25...81

  说明:
    func函数的形参列表的形参个数与map函数中可迭代对象的个数
    相关,一般func函数的形参个数等于map函数中的可迭代对象的个数
  示例:
    # 生成一个可迭代对象, 此可迭代对象可以生成:
    #   1**4, 2**3, 3**2, 4**1
    # pow(x, y, z=None)

    for x in map(pow, [1, 2, 3, 4], (4, 3, 2, 1)):
       print(x)

练习:
  1. 求 1**2 + 2**2 + 3**2 + ... + 9**2 的和
  2. 求 1**3 + 2**3 + 3**3 + ... + 9**3 的和
  3. 求 1**9 + 2**8 + 3**7 + ... + 9**1 的和