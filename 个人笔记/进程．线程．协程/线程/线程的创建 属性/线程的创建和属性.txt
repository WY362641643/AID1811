
threading 模块

from  threading import Thread 

t = Thread()
功能： 创建线程对象
参数： target  绑定线程函数
       args  元组  给线程函数传参
       kwargs  字典  给线程函数键值传参
       name  线程名称 默认 Thread-1

t.start()  启动线程，自动运行target函数
t.join([timeout]) 回收线程

线程对象属性

t.name   线程名称
t.setName()  设置线程名称
t.getName()  获取线程名称

t.is_alive() 线程状态

threading.currentThread()
功能 ：在线程函数中获取当前线程对象

t.daemon   默认False，表示主线程退出不影响分支线程执
           行，设置为True，则主线程退出，分支线程也退出
t.setDaemon() 设置daemon值
t.isDaemon()  查看daemon值

* 须在start前设置daemon属性，通常不会和join()一同使用


创建自己的线程类

    步骤： 1. 继承Thread
           2. 编写__init__添加属性，加载父类init
	   3. 重写run方法

    使用：使用自己的类创建线程对象，调用start启动线       程，则自动执行run方法

线程通信

    通信方法： 使用进程空间中全局变量通信

    注意事项： 共享资源的争夺，往往需要同步互斥机制