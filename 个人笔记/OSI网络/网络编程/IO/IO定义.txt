

IO类型 

在内存中存在数据交互的操作都认为是IO操作

和终端交互 ： input  print
和磁盘交互 ： read   write   pymysql
和网络交互 ： recv   send

计算密集型程序（cpu密集）：程序中计算较多，IO操作较少                             ，cpu消耗大，运行速度快

IO密集型程序：在程序执行中存在大量IO操作，而cpu运算较                少，cpu消耗很低，耗时较长


IO分类

阻塞IO   非阻塞IO   IO多路复用



阻塞IO 

阻塞IO是IO的默认形态，是效率较低的一种IO情形

    阻塞情况：
    * 因为某种条件没有达成造成的函数阻塞
      e.g.   accept  recv  recvfrom  input

    * 因为处理IO事件较长形成的阻塞行为
      e.g.  网络延迟  大文件读写



非阻塞IO

     * 将原本阻塞的IO函数通过设置属性使其变为非阻塞

     sockfd.setblocking(bool)
     功能： 将套接字设置为非阻塞IO
     参数： 默认为True 表示阻塞状态
           设置为False 则表示为非阻塞状态则sockfd调用函数时不阻塞

     * 超时检测：  即设置一个最长的等待时间，超时则不 
                  再阻塞等待

      sockfd.settimeout(sec)
      功能： 设置套接字的超时检测时间
      参数： 时间 秒
	
      * 在阻塞状态下设置超时检测



IO多路复用

定义： 同时监控多个IO事件，当哪个IO事件准备就绪就执
        行哪个IO事件。以此形成可以同时操作多个IO的行
        为，避免一个IO阻塞造成其他IO都不可执行的形态，
        提高IO运行效率

就绪IO ： 表示一种临界状态，即该IO已经发生，由内核交
           由应用程序处理

具体方案：

    1. 系统支持
       select ： windows   Linux   Unix
       poll ： Linux   Unix
       epoll ： Linux

    2. python实现
       import select
